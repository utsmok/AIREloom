[project]
name = "aireloom"
version = "0.1.0"
description = "Python interface for the OpenAIRE Graph API, built on top of the bibliofabric framework."
authors = [
    {name = "Samuel Mok",email = "s.mok@utwente.nl"}
]
readme = "README.md"
license = {text= "MIT"}
requires-python = ">=3.12"
dependencies = [
    "bibliofabric",
    "certifi",
]
[dependency-groups]
dev = [
    "pytest>=8.3.4",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=6.1.1",
    "pytest-httpx>=0.35.0",
]
docs = [
    "mkdocs~=1.6.0",
    "mkdocs-material~=9.5.0",
    "mkdocstrings[python]",
]


lint = ["ruff>=0.8.0"]
test = ["pytest", "pytest-randomly"]


[project.optional-dependencies]
analysis = [
    "polars",
    "duckdb>=1.3.0",
    "matplotlib>=3.10.3",
    "seaborn>=0.13.2",
    "plotly>=6.1.2",
    "networkx>=3.5",
    "requests>=2.32.4",
    "rich>=14.0.0",
    "pandas>=2.3.0",
    "numpy>=2.3.0",
    "pyarrow>=20.0.0",
]


[project.urls]
"Homepage" = "https://github.com/utsmok/aireloom"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/aireloom"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.uv.pip]
generate-hashes = true

[tool.ruff]
line-length = 88

[tool.ruff.format]
docstring-code-format = true
docstring-code-line-length = 60

[tool.ruff.lint]
select = [
    "E4",
    "E7",
    "E9",
    "F",
    "I", # isort
    "B", # bugbear -- flake8 bugfinder
    "Q", # correct quotes usage
    "PTH",  # Replace os functions with pathlib functions
    "SIM", # Simplify statements
    "RET", # Return value related rules
    "PIE", # misc flake8 rules
    "FBT", # boolean traps
    "PERF", # performance optimization
    "PL", # pylint
    "UP", # check for deprecated ways of coding
    "FURB",
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"aireloom/client.py" = ["PLR0913", "PLR0912", "PLR0915"]

[tool.ruff.lint.pylint]
max-args = 10
max-branches = 25
max-statements = 75
max-returns = 10

[tool.pytest.ini_options]
pythonpath = [
  "src"
]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
